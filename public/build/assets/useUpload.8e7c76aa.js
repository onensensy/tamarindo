import{aj as w,bw as y,n as c,i as E,aw as F,aM as P}from"./index.8f0bf197.js";import{u as A}from"./useAuthorization.5beda362.js";import{k as S,j as U}from"./app.be92839b.js";import"./Btn.abe2bb59.js";async function d(t){return await new Promise((s,e)=>{t.readEntries(s,e)})}async function b(t){const s=[];let e=await d(t);for(;e.length>0;)s.push(...e),e=await d(t);return s}async function q(t){const s=[],e=[];for(let a=0,r=t.length;a<r;a++)e.push(t[a].webkitGetAsEntry());for(;e.length>0;){const a=e.shift();!a||(a.isFile?s.push(a):a.isDirectory&&e.push(...await b(a.createReader())))}return s}const v=["audio/flac","audio/mp3","audio/mpeg","audio/ogg","audio/x-flac","audio/x-aac"],R=()=>{const{isAdmin:t}=A(),{toastSuccess:s,toastWarning:e}=S(),{go:a,isCurrentScreen:r}=U(),p=w(y.state,"media_path"),f=c(()=>Boolean(p.value)),m=c(()=>t.value&&!E.any),h=async n=>new Promise(o=>n.file(o)),l=n=>{const o=n.filter(i=>v.includes(i.type)).map(i=>({file:i,id:`${i.name}-${i.size}`,status:"Ready",name:i.name,progress:0}));return F.queue(o),o};return{mediaPathSetUp:f,allowsUpload:m,handleDropEvent:async n=>{if(!n.dataTransfer)return;const o=await q(n.dataTransfer.items),i=await Promise.all(o.map(g=>h(g))),u=l(i);u.length?(s(`Queued ${P(u,"file")} for upload`),r("Upload")||a("upload")):e("No files applicable for upload")},queueFilesForUpload:l}};export{v as a,R as u};
